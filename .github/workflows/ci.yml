name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v1.3
    
    - name: Setup PowerShell and Prerequisites
      shell: powershell
      run: |
        Write-Host "Checking PowerShell availability..."
        $pwshAvailable = Get-Command pwsh -ErrorAction SilentlyContinue
        if ($pwshAvailable) {
          Write-Host "PowerShell Core is available"
          pwsh --version
        } else {
          Write-Host "Using Windows PowerShell for build"
          Write-Host "PowerShell version: $($PSVersionTable.PSVersion)"
        }
    
    - name: Run Tests (No GUI Dependencies)
      shell: powershell
      run: |
        # Run build script which now supports both PowerShell Core and Windows PowerShell
        .\build_tests_only.bat
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-windows
        path: |
          imgui_opengl_glad/build_tests/Testing/**/*.xml
          imgui_opengl_glad/build_tests/Testing/**/*.log

  build-and-test-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake ninja-build pkg-config
        # Note: No GUI dependencies needed for tests-only build
    
    - name: Configure CMake (Tests Only)
      working-directory: imgui_opengl_glad
      run: |
        cmake -B build_tests -S . -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON -DWITH_IMGUI=OFF -G Ninja
    
    - name: Build Tests
      working-directory: imgui_opengl_glad
      run: |
        cmake --build build_tests --target unit_tests
    
    - name: Run Tests
      working-directory: imgui_opengl_glad
      run: |
        cd build_tests
        ctest --verbose --output-on-failure
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-linux
        path: |
          imgui_opengl_glad/build_tests/Testing/**/*.xml
          imgui_opengl_glad/build_tests/Testing/**/*.log

  code-quality:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install LLVM (includes clang-format)
      run: |
        choco install llvm --version=18.1.6
        refreshenv
    
    - name: Check code formatting
      shell: powershell
      run: |
        # Find and format check core and ui files
        $files = Get-ChildItem -Path "imgui_opengl_glad" -Recurse -Include "*.cpp","*.h" | Where-Object { $_.FullName -match "(core|ui|tests)" }
        if ($files) {
          Write-Host "Checking formatting for:"
          $files | ForEach-Object { Write-Host "  $_" }
          $files | ForEach-Object { 
            Write-Host "Checking: $($_.FullName)"
            & clang-format --dry-run --Werror $_.FullName
            if ($LASTEXITCODE -ne 0) { 
              Write-Error "Formatting issues found in $($_.FullName)"
              exit 1
            }
          }
          Write-Host "Code formatting check completed successfully"
        } else {
          Write-Host "No core/ui files found to check"
        }
    
    - name: Run static analysis (cppcheck) 
      run: |
        choco install cppcheck
        cppcheck --enable=warning,performance,portability --error-exitcode=1 imgui_opengl_glad/core/data_updater.cpp imgui_opengl_glad/core/data_updater.h
